% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manage.R
\name{manage_tinyurl_token}
\alias{manage_tinyurl_token}
\title{Manage TinyURL API Token}
\usage{
manage_tinyurl_token(token = NULL)
}
\arguments{
\item{token}{A character string containing the TinyURL API token. If \code{NULL}, the function retrieves the stored token. Default is \code{NULL}.}
}
\value{
If a token is provided, the function stores it and returns \code{NULL}. If no token is provided, it returns the stored token as a character string.
}
\description{
This function securely stores and retrieves the TinyURL API token from an \code{.Renviron} file in the working directory. If a new token is provided, it replaces any existing token and ensures \code{.Renviron} is ignored in \code{.gitignore} to prevent accidental commits.
}
\details{
This function manages the TinyURL API token by storing it in an \code{.Renviron} file in the working directory. It also ensures that \code{.Renviron} is ignored in \code{.gitignore} to prevent it from being committed to version control.
\itemize{
\item If a \strong{token is provided}, it is stored in \code{.Renviron}, and the user is prompted to restart R for the changes to take effect.
\item If \strong{no token is provided}, the function retrieves the stored token.
\item If no token is found, the function stops with an error.
}

\strong{Security Measures:}
\itemize{
\item Ensures \code{.Renviron} is automatically added to \code{.gitignore} to prevent exposure in public repositories.
\item Only updates \code{.Renviron} if a new token is provided.
}
}
\note{
Before using API functions like \code{squeeze_url()} or \code{recast_tinyurl()}, you must set up the TinyURL API token using this function.
}
\seealso{
\code{\link{squeeze_url}} for shortening URLs and \code{\link{recast_tinyurl}} for updating TinyURLs.
}
