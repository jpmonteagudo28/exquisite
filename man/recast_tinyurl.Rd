% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.R
\name{recast_tinyurl}
\alias{recast_tinyurl}
\title{Update an Existing TinyURL Short Link}
\usage{
recast_tinyurl(
  domain,
  alias = NULL,
  new_domain = NULL,
  new_alias = NULL,
  new_stats = NULL,
  new_tags = NULL,
  new_expires_at = NULL,
  new_description = NULL
)
}
\arguments{
\item{domain}{A character string specifying the current domain of the TinyURL link. It must be either \code{"tinyurl.com"} or \code{"tiny.one"}.}

\item{alias}{A character string specifying the current alias of the TinyURL link (e.g., \code{"example"} for \code{"tinyurl.com/example"}). Default is \code{NULL}, but must be provided to update a specific link.}

\item{new_domain}{A character string specifying the new domain for the shortened URL. Changing the domain is only available for paid users. Default is \code{NULL}.}

\item{new_alias}{A character string specifying the new alias for the shortened URL. The alias must be at least 5 characters long and contain only alphanumeric characters. Default is \code{NULL}.}

\item{new_stats}{A logical value indicating whether to enable advanced analytics for the TinyURL link. Default is \code{NULL}.}

\item{new_tags}{A character vector of tags associated with the shortened URL. Tags help categorize and organize links. Default is \code{NULL}.}

\item{new_expires_at}{A character string specifying the expiration time for the TinyURL link in ISO 8601 duration format (e.g., \code{"P10DT4H"} for 10 days and 4 hours). This feature is available only for paid accounts. Default is \code{NULL}.}

\item{new_description}{A character string providing a new description for the TinyURL link. Default is \code{NULL}.}
}
\value{
A character string representing the updated shortened URL.
}
\description{
This function modifies an existing shortened URL created with TinyURL. It allows updating the alias, domain, expiration date, description, and tags associated with the short link. The API token is automatically retrieved from the \code{.Renviron} file.
}
\details{
This function sends a \code{PATCH} request to TinyURLâ€™s \verb{/update} API endpoint to modify an existing short link. The API token is managed automatically via the \code{manage_tinyurl_token()} function. To update a short link, both the \code{domain} and \code{alias} of the existing link must be specified.

\strong{Limitations:}
\itemize{
\item Free accounts \strong{cannot change the tags}.
\item The \code{new_alias} must be at least 5 characters long and \strong{not already in use}.
\item If \code{new_alias} is already taken, the request will fail with a \verb{422 Unprocessable Entity} error.
\item Expiration dates (\code{new_expires_at}) and link statistics (\code{new_stats}) are available \strong{only for paid accounts}.
}
}
\note{
Ensure that the alias being updated exists before calling this function. Use \code{squeeze_url()} to create new TinyURLs.
}
\examples{
\donttest{
# Update an alias of an existing TinyURL
recast_tinyurl(domain = "tiny.one", alias = "parvus", new_alias = "situs")


# Change expiration date (only available for paid users)
recast_tinyurl(domain = "tinyurl.com", alias = "myalias", new_expires_at = "P10DT4H")
}

}
\seealso{
\code{\link{squeeze_url}} for creating new TinyURLs.
}
